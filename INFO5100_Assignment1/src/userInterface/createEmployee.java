/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import com.toedter.calendar.JDateChooser;
import employeeDetails.EmployeeProfile;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import javax.swing.JTextField;
import java.util.*;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author sujithkaluva
 */
public class createEmployee extends javax.swing.JPanel {

    /**
     * Creates new form createEmployee
     */
    
    static ArrayList<EmployeeProfile> employeeList = new ArrayList<EmployeeProfile>();
    EmployeeProfile employeeObj = new EmployeeProfile();
    
    public createEmployee() {
        initComponents();
    }

    public createEmployee(EmployeeProfile emp) {
        initComponents();
        empNameTxt.setName("empName");
        empIdTxt.setName("empId");
        empAgeTxt.setName("empAge");
        empGenderBox.setName("empGender");
        empStartDatePicker.setName("startDate");
        empLevelTxt.setName("level");
        empTeamInfoTxt.setName("teamInfo");
        empPositionTitleTxt.setName("positionTitle");
        empPhoneTxt.setName("cellNumber");
        empEmailTxt.setName("emailId");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mainLabel = new javax.swing.JLabel();
        empNameLabel = new javax.swing.JLabel();
        empIdLabel = new javax.swing.JLabel();
        empAgeLabel = new javax.swing.JLabel();
        empStartDateLabel = new javax.swing.JLabel();
        empGenderLabel = new javax.swing.JLabel();
        empLevelLabel = new javax.swing.JLabel();
        empTeamInfoLabel = new javax.swing.JLabel();
        empPositionTitleLabel = new javax.swing.JLabel();
        contactInfoLabel = new javax.swing.JLabel();
        empEmailIdLabel = new javax.swing.JLabel();
        empPhnNumLabel = new javax.swing.JLabel();
        empPhotoLabel = new javax.swing.JLabel();
        uploadImageBtn = new javax.swing.JButton();
        createEmpBtn = new javax.swing.JButton();
        empNameTxt = new javax.swing.JTextField();
        empIdTxt = new javax.swing.JTextField();
        empAgeTxt = new javax.swing.JTextField();
        empLevelTxt = new javax.swing.JTextField();
        empGenderBox = new javax.swing.JComboBox<>();
        empTeamInfoTxt = new javax.swing.JTextField();
        empPositionTitleTxt = new javax.swing.JTextField();
        empEmailTxt = new javax.swing.JTextField();
        empPhoneTxt = new javax.swing.JTextField();
        empStartDatePicker = new com.toedter.calendar.JDateChooser();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        mainLabel.setBackground(new java.awt.Color(255, 255, 255));
        mainLabel.setFont(new java.awt.Font("Charter", 0, 18)); // NOI18N
        mainLabel.setForeground(new java.awt.Color(255, 255, 255));
        mainLabel.setText("Create Employee");

        empNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        empNameLabel.setText("Name");

        empIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        empIdLabel.setText("Employee ID");

        empAgeLabel.setForeground(new java.awt.Color(255, 255, 255));
        empAgeLabel.setText("Age");

        empStartDateLabel.setForeground(new java.awt.Color(255, 255, 255));
        empStartDateLabel.setText("Start Date");

        empGenderLabel.setForeground(new java.awt.Color(255, 255, 255));
        empGenderLabel.setText("Gender");

        empLevelLabel.setForeground(new java.awt.Color(255, 255, 255));
        empLevelLabel.setText("Level");

        empTeamInfoLabel.setForeground(new java.awt.Color(255, 255, 255));
        empTeamInfoLabel.setText("Team Info");

        empPositionTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        empPositionTitleLabel.setText("Position Title");

        contactInfoLabel.setFont(new java.awt.Font("Charter", 0, 14)); // NOI18N
        contactInfoLabel.setForeground(new java.awt.Color(255, 255, 255));
        contactInfoLabel.setText("Contact Information");

        empEmailIdLabel.setFont(new java.awt.Font("Charter", 0, 14)); // NOI18N
        empEmailIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        empEmailIdLabel.setText("Email Id");

        empPhnNumLabel.setFont(new java.awt.Font("Charter", 0, 14)); // NOI18N
        empPhnNumLabel.setForeground(new java.awt.Color(255, 255, 255));
        empPhnNumLabel.setText("Phone Number");

        empPhotoLabel.setFont(new java.awt.Font("Charter", 0, 14)); // NOI18N
        empPhotoLabel.setForeground(new java.awt.Color(255, 255, 255));
        empPhotoLabel.setText("Photo");

        uploadImageBtn.setBackground(new java.awt.Color(0, 153, 204));
        uploadImageBtn.setForeground(new java.awt.Color(255, 255, 255));
        uploadImageBtn.setText("Upload Image");
        uploadImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImageBtnActionPerformed(evt);
            }
        });

        createEmpBtn.setBackground(new java.awt.Color(0, 153, 204));
        createEmpBtn.setForeground(new java.awt.Color(255, 255, 255));
        createEmpBtn.setText("Create");
        createEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEmpBtnActionPerformed(evt);
            }
        });

        empNameTxt.setBackground(new java.awt.Color(255, 255, 255));
        empNameTxt.setForeground(new java.awt.Color(0, 0, 0));
        empNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empNameTxtActionPerformed(evt);
            }
        });

        empIdTxt.setBackground(new java.awt.Color(255, 255, 255));
        empIdTxt.setForeground(new java.awt.Color(0, 0, 0));
        empIdTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empIdTxtActionPerformed(evt);
            }
        });

        empAgeTxt.setBackground(new java.awt.Color(255, 255, 255));
        empAgeTxt.setForeground(new java.awt.Color(0, 0, 0));
        empAgeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empAgeTxtActionPerformed(evt);
            }
        });

        empLevelTxt.setBackground(new java.awt.Color(255, 255, 255));
        empLevelTxt.setForeground(new java.awt.Color(0, 0, 0));
        empLevelTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empLevelTxtActionPerformed(evt);
            }
        });

        empGenderBox.setBackground(new java.awt.Color(255, 255, 255));
        empGenderBox.setForeground(new java.awt.Color(0, 0, 0));
        empGenderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        empTeamInfoTxt.setBackground(new java.awt.Color(255, 255, 255));
        empTeamInfoTxt.setForeground(new java.awt.Color(0, 0, 0));
        empTeamInfoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empTeamInfoTxtActionPerformed(evt);
            }
        });

        empPositionTitleTxt.setBackground(new java.awt.Color(255, 255, 255));
        empPositionTitleTxt.setForeground(new java.awt.Color(0, 0, 0));
        empPositionTitleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPositionTitleTxtActionPerformed(evt);
            }
        });

        empEmailTxt.setBackground(new java.awt.Color(255, 255, 255));
        empEmailTxt.setForeground(new java.awt.Color(0, 0, 0));
        empEmailTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empEmailTxtActionPerformed(evt);
            }
        });

        empPhoneTxt.setBackground(new java.awt.Color(255, 255, 255));
        empPhoneTxt.setForeground(new java.awt.Color(0, 0, 0));
        empPhoneTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empPhoneTxtActionPerformed(evt);
            }
        });

        empStartDatePicker.setBackground(new java.awt.Color(255, 255, 255));
        empStartDatePicker.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(mainLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(empPhnNumLabel)
                                    .addComponent(empEmailIdLabel)
                                    .addComponent(empPhotoLabel)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(empIdLabel)
                                    .addComponent(empNameLabel)
                                    .addComponent(empAgeLabel)
                                    .addComponent(empGenderLabel)
                                    .addComponent(empStartDateLabel)
                                    .addComponent(empLevelLabel)
                                    .addComponent(empTeamInfoLabel)
                                    .addComponent(empPositionTitleLabel))))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uploadImageBtn)
                            .addComponent(empNameTxt)
                            .addComponent(empIdTxt)
                            .addComponent(empAgeTxt)
                            .addComponent(empLevelTxt)
                            .addComponent(empTeamInfoTxt)
                            .addComponent(empPositionTitleTxt)
                            .addComponent(empPhoneTxt)
                            .addComponent(empEmailTxt)
                            .addComponent(empGenderBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(empStartDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(contactInfoLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(createEmpBtn)))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(mainLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empNameLabel)
                    .addComponent(empNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empIdLabel)
                    .addComponent(empIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empAgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empAgeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empGenderLabel)
                    .addComponent(empGenderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(empStartDateLabel)
                    .addComponent(empStartDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empLevelLabel)
                    .addComponent(empLevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empTeamInfoLabel)
                    .addComponent(empTeamInfoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empPositionTitleLabel)
                    .addComponent(empPositionTitleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(contactInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empPhnNumLabel)
                    .addComponent(empPhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empEmailIdLabel)
                    .addComponent(empEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empPhotoLabel)
                    .addComponent(uploadImageBtn))
                .addGap(18, 18, 18)
                .addComponent(createEmpBtn)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEmpBtnActionPerformed
        // TODO add your handling code here:
        JTextField[] VARIABLE_CONSTANTS = {empAgeTxt, empEmailTxt, empIdTxt, empLevelTxt, empNameTxt, empPhoneTxt, empPositionTitleTxt, empTeamInfoTxt};
        JComboBox genderInfo = empGenderBox;
        JDateChooser strtDt = empStartDatePicker;
        
        boolean imageUploaded = false;
        if(employeeObj.getPhoto()==null || employeeObj.getPhoto().length == 0){
            imageUploaded = false;
        }
        else imageUploaded = true;
        
        boolean validated = false;
        for (JTextField field : VARIABLE_CONSTANTS) {
            if (!validateData(field)) {
                validated = false;
                break;
            } else {
                validated = true;
                System.out.println("Validated");
            }
        }
        
        if(validated && imageUploaded){
            employeeObj.setEmpName(empNameTxt.getText());
            employeeObj.setEmpId(empIdTxt.getText());
            employeeObj.setEmpAge(Integer.parseInt(empAgeTxt.getText()));
            employeeObj.setEmpGender(empGenderBox.getSelectedItem().toString());
            employeeObj.setStartDate(empStartDatePicker.getDate());
            employeeObj.setLevel(empLevelTxt.getText());
            employeeObj.setTeamInfo(empTeamInfoTxt.getText());
            employeeObj.setPositionTitle(empPositionTitleTxt.getText());
            employeeObj.setCellNumber(empPhoneTxt.getText());
            employeeObj.setEmailId(empEmailTxt.getText());
            
            employeeList.add(employeeObj);
            
            JOptionPane.showMessageDialog(this,"Employee Profile Created Successfully!");
            empNameTxt.setText("");
            empIdTxt.setText("");
            empAgeTxt.setText("");
            empStartDatePicker.setDate(null);
            empLevelTxt.setText("");
            empTeamInfoTxt.setText("");
            empPositionTitleTxt.setText("");
            empPhoneTxt.setText("");
            empEmailTxt.setText("");
            empGenderBox.setSelectedItem(null);
            
            for(EmployeeProfile em:employeeList){
                System.out.println(em.getCellNumber());                System.out.println(em.getEmailId());
                System.out.println(em.getEmpGender());                System.out.println(em.getStartDate().toString());
                System.out.println(em.getEmpId());
            }
        }
        else if(!imageUploaded){
            JOptionPane.showMessageDialog(this, "Please Upload the Image");
        }
    }//GEN-LAST:event_createEmpBtnActionPerformed

    public boolean validateData(JComponent input) {
        String name = input.getName();
        String errorMsg = "";
        boolean raiseError = false;
        String text = ((JTextField) input).getText().trim();
        if (text == null || text.isEmpty()) {
            raiseError = true;
            errorMsg = String.format("Please enter a value. The value for %s cannot be empty", name);
        } 
        else {
            switch (name) {
                case "empName":
                    if (!text.matches("^[a-zA-z]+$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter valid values for %s", name);
                    }
                    break;
                case "cellNumber":
                    if (!text.matches("^[0-9]{10}")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;
                case "empId":
                    for (EmployeeProfile emp : employeeList) {
                        if (String.valueOf(emp.getEmpId()).equals(text)) {
                            raiseError = true;
                            errorMsg = String.format("Employee ID Exists. Please Try Again!", name);
                            break;
                        }
                    }
                    break;
//                case "sdate":
//                    if (!text.matches("^((0[0-9]||1[0-2])/[0-2][0-9]||3[0-1])/([0-9][0-9])?[0-9][0-9]$")) {
//                        raiseError = true;
//                        errorMsg = String.format("Please enter a valid %s with the format MM/DD/YYYY", name);
//                    }
//                    break;
                case "emailId":
                    if (!text.matches("^(.+)@(.+)$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;

                default:
                    break;
            }
        }
        if (raiseError) {
            JOptionPane.showMessageDialog(this, errorMsg);
            return false;
        }
        return true;
    }
    private void empNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empNameTxtActionPerformed

    private void empIdTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empIdTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empIdTxtActionPerformed

    private void empAgeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empAgeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empAgeTxtActionPerformed

    private void empLevelTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empLevelTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empLevelTxtActionPerformed

    private void empTeamInfoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empTeamInfoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empTeamInfoTxtActionPerformed

    private void empPositionTitleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPositionTitleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empPositionTitleTxtActionPerformed

    private void empEmailTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empEmailTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empEmailTxtActionPerformed

    private void empPhoneTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empPhoneTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empPhoneTxtActionPerformed

    private void uploadImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImageBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileUploader = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg","jpeg", "gif");
        fileUploader.setFileFilter(filter);
        fileUploader.setDialogTitle("Choose Your Photo");
        fileUploader.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnval = fileUploader.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION)
        {
            File uploadedFile = fileUploader.getSelectedFile();
            BufferedImage bufferedImageObj;
            try {
                bufferedImageObj = ImageIO.read(uploadedFile);
                ByteArrayOutputStream byteArrayOs = new ByteArrayOutputStream();
                ImageIO.write(bufferedImageObj, "jpg", byteArrayOs);
                byte[] photoBytes = byteArrayOs.toByteArray();
                employeeObj.setPhoto(photoBytes);
                
                JOptionPane.showMessageDialog(fileUploader, "Photo Uploaded Successfully");
            } catch(IOException e) {
               e.printStackTrace();
               JOptionPane.showMessageDialog(fileUploader, "Error while uploading Photo");
            }
        }
    }//GEN-LAST:event_uploadImageBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contactInfoLabel;
    private javax.swing.JButton createEmpBtn;
    private javax.swing.JLabel empAgeLabel;
    private javax.swing.JTextField empAgeTxt;
    private javax.swing.JLabel empEmailIdLabel;
    private javax.swing.JTextField empEmailTxt;
    private javax.swing.JComboBox<String> empGenderBox;
    private javax.swing.JLabel empGenderLabel;
    private javax.swing.JLabel empIdLabel;
    private javax.swing.JTextField empIdTxt;
    private javax.swing.JLabel empLevelLabel;
    private javax.swing.JTextField empLevelTxt;
    private javax.swing.JLabel empNameLabel;
    private javax.swing.JTextField empNameTxt;
    private javax.swing.JLabel empPhnNumLabel;
    private javax.swing.JTextField empPhoneTxt;
    private javax.swing.JLabel empPhotoLabel;
    private javax.swing.JLabel empPositionTitleLabel;
    private javax.swing.JTextField empPositionTitleTxt;
    private javax.swing.JLabel empStartDateLabel;
    private com.toedter.calendar.JDateChooser empStartDatePicker;
    private javax.swing.JLabel empTeamInfoLabel;
    private javax.swing.JTextField empTeamInfoTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JButton uploadImageBtn;
    // End of variables declaration//GEN-END:variables
}
